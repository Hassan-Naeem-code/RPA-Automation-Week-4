version: '3.8'

services:
  flight-automation:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: flight-automation-app
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    volumes:
      # Mount data, logs, and reports for persistence
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./config:/app/config:ro  # Read-only config
    networks:
      - automation-network
    restart: unless-stopped
    command: ["python", "scripts/run_automation.py", "--config", "/app/config/settings.yaml"]

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: flight-automation-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - automation-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for data persistence (future enhancement)
  postgres:
    image: postgres:15-alpine
    container_name: flight-automation-db
    environment:
      POSTGRES_DB: flight_automation
      POSTGRES_USER: automation_user
      POSTGRES_PASSWORD: automation_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - automation-network
    restart: unless-stopped

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: flight-automation-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - automation-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

networks:
  automation-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
